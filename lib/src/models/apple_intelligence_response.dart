/// Base class for Apple Intelligence responses.
///
/// All response types extend this class and contain a [success] flag and
/// optional [error] message when operations fail.
abstract class AppleIntelligenceResponse {
  /// Whether the Apple Intelligence operation completed successfully.
  final bool success;

  /// Error message when the operation fails, null when successful.
  final String? error;

  /// Creates a base response instance.
  const AppleIntelligenceResponse({
    required this.success,
    this.error,
  });

  /// Creates a response from JSON data. Subclasses must override this method.
  factory AppleIntelligenceResponse.fromJson(Map<String, dynamic> json) {
    throw UnimplementedError('Subclasses must implement fromJson');
  }
}

/// Response for text processing operations.
///
/// Contains the [processedText] generated by Apple Intelligence and optional
/// [metadata] with additional information about the processing operation.
class TextProcessingResponse extends AppleIntelligenceResponse {
  /// The text generated or processed by Apple Intelligence, if successful.
  final String? processedText;

  /// Additional metadata about the processing operation, if available.
  final Map<String, dynamic>? metadata;

  /// Creates a text processing response.
  const TextProcessingResponse({
    required super.success,
    super.error,
    this.processedText,
    this.metadata,
  });

  /// Creates a text processing response from JSON data.
  factory TextProcessingResponse.fromJson(Map<String, dynamic> json) {
    return TextProcessingResponse(
      success: json['success'] as bool,
      error: json['error'] as String?,
      processedText: json['processedText'] as String?,
      metadata: json['metadata'] as Map<String, dynamic>?,
    );
  }
}
